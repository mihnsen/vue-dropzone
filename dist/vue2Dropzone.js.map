{"version":3,"file":"vue2Dropzone.js","sources":["../src/services/urlsigner.js","../src/components/vue-dropzone.vue","../node_modules/vue-runtime-helpers/dist/normalize-component.js"],"sourcesContent":["export default {\n  getSignedURL(file, config) {\n    let payload = {\n      filePath: file.name,\n      contentType: file.type\n    }\n\n    return new Promise((resolve, reject) => {\n      var fd = new FormData();\n      let request = new XMLHttpRequest(),\n          signingURL = (typeof config.signingURL === \"function\") ?  config.signingURL(file) : config.signingURL;\n      request.open(\"POST\", signingURL);\n      request.onload = function () {\n        if (request.status == 200) {\n          resolve(JSON.parse(request.response));\n        } else {\n          reject((request.statusText));\n        }\n      };\n      request.onerror = function (err) {\n        console.error(\"Network Error : Could not send request to AWS (Maybe CORS errors)\");\n        reject(err)\n      };\n      if (config.withCredentials === true) {\n        request.withCredentials = true;\n      }\n      Object.entries(config.headers || {}).forEach(([name, value]) => {\n        request.setRequestHeader(name, value);\n      });\n      payload = Object.assign(payload, config.params || {});\n      Object.entries(payload).forEach(([name, value]) => {\n        fd.append(name, value);\n      });\n\n      request.send(fd);\n    });\n  },\n  sendFile(file, config, is_sending_s3) {\n    var handler = (is_sending_s3) ? this.setResponseHandler : this.sendS3Handler;\n\n    return this.getSignedURL(file, config)\n      .then((response) => {return handler(response, file)})\n      .catch((error) => { return error; });\n  },\n  setResponseHandler(response, file) {\n    file.s3Signature = response.signature;\n    file.s3Url = response.postEndpoint;\n  },\n  sendS3Handler(response, file) {\n    let fd = new FormData(),\n      signature = response.signature;\n\n    Object.keys(signature).forEach(function (key) {\n      fd.append(key, signature[key]);\n    });\n    fd.append('file', file);\n    return new Promise((resolve, reject) => {\n      let request = new XMLHttpRequest();\n      request.open('POST', response.postEndpoint);\n      request.onload = function () {\n        if (request.status == 201) {\n          var s3Error = (new window.DOMParser()).parseFromString(request.response, \"text/xml\");\n          var successMsg = s3Error.firstChild.children[0].innerHTML;\n          resolve({\n            'success': true,\n            'message': successMsg\n          })\n        } else {\n          var s3Error = (new window.DOMParser()).parseFromString(request.response, \"text/xml\");\n          var errMsg = s3Error.firstChild.children[0].innerHTML;\n          reject({\n            'success': false,\n            'message': errMsg + \". Request is marked as resolved when returns as status 201\"\n          })\n        }\n      };\n      request.onerror = function (err) {\n        var s3Error = (new window.DOMParser()).parseFromString(request.response, \"text/xml\");\n        var errMsg = s3Error.firstChild.children[1].innerHTML;\n        reject({\n          'success': false,\n          'message': errMsg\n        })\n      };\n      request.send(fd);\n    });\n  }\n}\n","<template>\n  <div :id=\"id\" ref=\"dropzoneElement\" :class=\"{ 'vue-dropzone dropzone': includeStyling }\">\n    <div v-if=\"useCustomSlot\" class=\"dz-message\">\n      <slot>Drop files here to upload</slot>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Dropzone from \"dropzone\"; //eslint-disable-line\nimport awsEndpoint from \"../services/urlsigner\";\n\nDropzone.autoDiscover = false;\n\nexport default {\n  props: {\n    id: {\n      type: String,\n      required: true,\n      default: \"dropzone\"\n    },\n    options: {\n      type: Object,\n      required: true\n    },\n    includeStyling: {\n      type: Boolean,\n      default: true,\n      required: false\n    },\n    awss3: {\n      type: Object,\n      required: false,\n      default: null\n    },\n    destroyDropzone: {\n      type: Boolean,\n      default: true,\n      required: false\n    },\n    duplicateCheck: {\n      type: Boolean,\n      default: false,\n      required: false\n    },\n    useCustomSlot: {\n      type: Boolean,\n      default: false,\n      required: false\n    }\n  },\n  data() {\n    return {\n      isS3: false,\n      isS3OverridesServerPropagation: false,\n      wasQueueAutoProcess: true\n    };\n  },\n  computed: {\n    dropzoneSettings() {\n      let defaultValues = {\n        thumbnailWidth: 200,\n        thumbnailHeight: 200\n      };\n      Object.keys(this.options).forEach(function(key) {\n        defaultValues[key] = this.options[key];\n      }, this);\n      if (this.awss3 !== null) {\n        defaultValues[\"autoProcessQueue\"] = false;\n        this.isS3 = true; //eslint-disable-line\n        this.isS3OverridesServerPropagation =\n          this.awss3.sendFileToServer === false; //eslint-disable-line\n        if (this.options.autoProcessQueue !== undefined)\n          this.wasQueueAutoProcess = this.options.autoProcessQueue; //eslint-disable-line\n\n        if (this.isS3OverridesServerPropagation) {\n          defaultValues[\"url\"] = files => {\n            return files[0].s3Url;\n          };\n        }\n      }\n      return defaultValues;\n    }\n  },\n  mounted() {\n    if (this.$isServer && this.hasBeenMounted) {\n      return;\n    }\n    this.hasBeenMounted = true;\n\n    this.dropzone = new Dropzone(\n      this.$refs.dropzoneElement,\n      this.dropzoneSettings\n    );\n    let vm = this;\n\n    this.dropzone.on(\"thumbnail\", function(file, dataUrl) {\n      vm.$emit(\"vdropzone-thumbnail\", file, dataUrl);\n    });\n\n    this.dropzone.on(\"addedfile\", function(file) {\n      var isDuplicate = false;\n      if (vm.duplicateCheck) {\n        if (this.files.length) {\n          var _i, _len;\n          for (\n            _i = 0, _len = this.files.length;\n            _i < _len - 1;\n            _i++ // -1 to exclude current file\n          ) {\n            if (\n              this.files[_i].name === file.name &&\n              this.files[_i].size === file.size &&\n              this.files[_i].lastModifiedDate.toString() ===\n                file.lastModifiedDate.toString()\n            ) {\n              this.removeFile(file);\n              isDuplicate = true;\n              vm.$emit(\"vdropzone-duplicate-file\", file);\n            }\n          }\n        }\n      }\n\n      vm.$emit(\"vdropzone-file-added\", file);\n      if (vm.isS3 && vm.wasQueueAutoProcess && !file.manuallyAdded) {\n        vm.getSignedAndUploadToS3(file);\n      }\n    });\n\n    this.dropzone.on(\"addedfiles\", function(files) {\n      vm.$emit(\"vdropzone-files-added\", files);\n    });\n\n    this.dropzone.on(\"removedfile\", function(file) {\n      vm.$emit(\"vdropzone-removed-file\", file);\n      if (file.manuallyAdded && vm.dropzone.options.maxFiles !== null)\n        vm.dropzone.options.maxFiles++;\n    });\n\n    this.dropzone.on(\"success\", function(file, response) {\n      vm.$emit(\"vdropzone-success\", file, response);\n      if (vm.isS3) {\n        if (vm.isS3OverridesServerPropagation) {\n          var xmlResponse = new window.DOMParser().parseFromString(\n            response,\n            \"text/xml\"\n          );\n          var s3ObjectLocation = xmlResponse.firstChild.children[0].innerHTML;\n          vm.$emit(\"vdropzone-s3-upload-success\", s3ObjectLocation);\n        }\n        if (vm.wasQueueAutoProcess) vm.setOption(\"autoProcessQueue\", false);\n      }\n    });\n\n    this.dropzone.on(\"successmultiple\", function(file, response) {\n      vm.$emit(\"vdropzone-success-multiple\", file, response);\n    });\n\n    this.dropzone.on(\"error\", function(file, message, xhr) {\n      vm.$emit(\"vdropzone-error\", file, message, xhr);\n      if (this.isS3) vm.$emit(\"vdropzone-s3-upload-error\");\n    });\n\n    this.dropzone.on(\"errormultiple\", function(files, message, xhr) {\n      vm.$emit(\"vdropzone-error-multiple\", files, message, xhr);\n    });\n\n    this.dropzone.on(\"sending\", function(file, xhr, formData) {\n      if (vm.isS3) {\n        if (vm.isS3OverridesServerPropagation) {\n          let signature = file.s3Signature;\n          Object.keys(signature).forEach(function(key) {\n            formData.append(key, signature[key]);\n          });\n        } else {\n          formData.append(\"s3ObjectLocation\", file.s3ObjectLocation);\n        }\n      }\n      vm.$emit(\"vdropzone-sending\", file, xhr, formData);\n    });\n\n    this.dropzone.on(\"sendingmultiple\", function(file, xhr, formData) {\n      vm.$emit(\"vdropzone-sending-multiple\", file, xhr, formData);\n    });\n\n    this.dropzone.on(\"complete\", function(file) {\n      vm.$emit(\"vdropzone-complete\", file);\n    });\n\n    this.dropzone.on(\"completemultiple\", function(files) {\n      vm.$emit(\"vdropzone-complete-multiple\", files);\n    });\n\n    this.dropzone.on(\"canceled\", function(file) {\n      vm.$emit(\"vdropzone-canceled\", file);\n    });\n\n    this.dropzone.on(\"canceledmultiple\", function(files) {\n      vm.$emit(\"vdropzone-canceled-multiple\", files);\n    });\n\n    this.dropzone.on(\"maxfilesreached\", function(files) {\n      vm.$emit(\"vdropzone-max-files-reached\", files);\n    });\n\n    this.dropzone.on(\"maxfilesexceeded\", function(file) {\n      vm.$emit(\"vdropzone-max-files-exceeded\", file);\n    });\n\n    this.dropzone.on(\"processing\", function(file) {\n      vm.$emit(\"vdropzone-processing\", file);\n    });\n\n    this.dropzone.on(\"processingmultiple\", function(files) {\n      vm.$emit(\"vdropzone-processing-multiple\", files);\n    });\n\n    this.dropzone.on(\"uploadprogress\", function(file, progress, bytesSent) {\n      vm.$emit(\"vdropzone-upload-progress\", file, progress, bytesSent);\n    });\n\n    this.dropzone.on(\"totaluploadprogress\", function(\n      totaluploadprogress,\n      totalBytes,\n      totalBytesSent\n    ) {\n      vm.$emit(\n        \"vdropzone-total-upload-progress\",\n        totaluploadprogress,\n        totalBytes,\n        totalBytesSent\n      );\n    });\n\n    this.dropzone.on(\"reset\", function() {\n      vm.$emit(\"vdropzone-reset\");\n    });\n\n    this.dropzone.on(\"queuecomplete\", function() {\n      vm.$emit(\"vdropzone-queue-complete\");\n    });\n\n    this.dropzone.on(\"drop\", function(event) {\n      vm.$emit(\"vdropzone-drop\", event);\n    });\n\n    this.dropzone.on(\"dragstart\", function(event) {\n      vm.$emit(\"vdropzone-drag-start\", event);\n    });\n\n    this.dropzone.on(\"dragend\", function(event) {\n      vm.$emit(\"vdropzone-drag-end\", event);\n    });\n\n    this.dropzone.on(\"dragenter\", function(event) {\n      vm.$emit(\"vdropzone-drag-enter\", event);\n    });\n\n    this.dropzone.on(\"dragover\", function(event) {\n      vm.$emit(\"vdropzone-drag-over\", event);\n    });\n\n    this.dropzone.on(\"dragleave\", function(event) {\n      vm.$emit(\"vdropzone-drag-leave\", event);\n    });\n\n    vm.$emit(\"vdropzone-mounted\");\n  },\n  beforeDestroy() {\n    if (this.destroyDropzone) this.dropzone.destroy();\n  },\n  methods: {\n    manuallyAddFile: function(file, fileUrl) {\n      file.manuallyAdded = true;\n      this.dropzone.emit(\"addedfile\", file);\n      let containsImageFileType = false;\n      if (\n        fileUrl.indexOf(\".svg\") > -1 ||\n        fileUrl.indexOf(\".png\") > -1 ||\n        fileUrl.indexOf(\".jpg\") > -1 ||\n        fileUrl.indexOf(\".jpeg\") > -1 ||\n        fileUrl.indexOf(\".gif\") > -1 ||\n        fileUrl.indexOf(\".webp\") > -1\n      )\n        containsImageFileType = true;\n      if (\n        this.dropzone.options.createImageThumbnails &&\n        containsImageFileType &&\n        file.size <= this.dropzone.options.maxThumbnailFilesize * 1024 * 1024\n      ) {\n        fileUrl && this.dropzone.emit(\"thumbnail\", file, fileUrl);\n\n        var thumbnails = file.previewElement.querySelectorAll(\n          \"[data-dz-thumbnail]\"\n        );\n        for (var i = 0; i < thumbnails.length; i++) {\n          thumbnails[i].style.width =\n            this.dropzoneSettings.thumbnailWidth + \"px\";\n          thumbnails[i].style.height =\n            this.dropzoneSettings.thumbnailHeight + \"px\";\n          thumbnails[i].style[\"object-fit\"] = \"contain\";\n        }\n      }\n      this.dropzone.emit(\"complete\", file);\n      if (this.dropzone.options.maxFiles) this.dropzone.options.maxFiles--;\n      this.dropzone.files.push(file);\n      this.$emit(\"vdropzone-file-added-manually\", file);\n    },\n    setOption: function(option, value) {\n      this.dropzone.options[option] = value;\n    },\n    removeAllFiles: function(bool) {\n      this.dropzone.removeAllFiles(bool);\n    },\n    processQueue: function() {\n      let dropzoneEle = this.dropzone;\n      if (this.isS3 && !this.wasQueueAutoProcess) {\n        this.getQueuedFiles().forEach(file => {\n          this.getSignedAndUploadToS3(file);\n        });\n      } else {\n        this.dropzone.processQueue();\n      }\n      this.dropzone.on(\"success\", function() {\n        dropzoneEle.options.autoProcessQueue = true;\n      });\n      this.dropzone.on(\"queuecomplete\", function() {\n        dropzoneEle.options.autoProcessQueue = false;\n      });\n    },\n    init: function() {\n      return this.dropzone.init();\n    },\n    destroy: function() {\n      return this.dropzone.destroy();\n    },\n    updateTotalUploadProgress: function() {\n      return this.dropzone.updateTotalUploadProgress();\n    },\n    getFallbackForm: function() {\n      return this.dropzone.getFallbackForm();\n    },\n    getExistingFallback: function() {\n      return this.dropzone.getExistingFallback();\n    },\n    setupEventListeners: function() {\n      return this.dropzone.setupEventListeners();\n    },\n    removeEventListeners: function() {\n      return this.dropzone.removeEventListeners();\n    },\n    disable: function() {\n      return this.dropzone.disable();\n    },\n    enable: function() {\n      return this.dropzone.enable();\n    },\n    filesize: function(size) {\n      return this.dropzone.filesize(size);\n    },\n    accept: function(file, done) {\n      return this.dropzone.accept(file, done);\n    },\n    addFile: function(file) {\n      return this.dropzone.addFile(file);\n    },\n    removeFile: function(file) {\n      this.dropzone.removeFile(file);\n    },\n    getAcceptedFiles: function() {\n      return this.dropzone.getAcceptedFiles();\n    },\n    getRejectedFiles: function() {\n      return this.dropzone.getRejectedFiles();\n    },\n    getFilesWithStatus: function() {\n      return this.dropzone.getFilesWithStatus();\n    },\n    getQueuedFiles: function() {\n      return this.dropzone.getQueuedFiles();\n    },\n    getUploadingFiles: function() {\n      return this.dropzone.getUploadingFiles();\n    },\n    getAddedFiles: function() {\n      return this.dropzone.getAddedFiles();\n    },\n    getActiveFiles: function() {\n      return this.dropzone.getActiveFiles();\n    },\n    getSignedAndUploadToS3(file) {\n      var promise = awsEndpoint.sendFile(\n        file,\n        this.awss3,\n        this.isS3OverridesServerPropagation\n      );\n      if (!this.isS3OverridesServerPropagation) {\n        promise.then(response => {\n          if (response.success) {\n            file.s3ObjectLocation = response.message;\n            setTimeout(() => this.dropzone.processFile(file));\n            this.$emit(\"vdropzone-s3-upload-success\", response.message);\n          } else {\n            if (\"undefined\" !== typeof response.message) {\n              this.$emit(\"vdropzone-s3-upload-error\", response.message);\n            } else {\n              this.$emit(\n                \"vdropzone-s3-upload-error\",\n                \"Network Error : Could not send request to AWS. (Maybe CORS error)\"\n              );\n            }\n          }\n        });\n      } else {\n        promise.then(() => {\n          setTimeout(() => this.dropzone.processFile(file));\n        });\n      }\n      promise.catch(error => {\n        alert(error);\n      });\n    },\n    setAWSSigningURL(location) {\n      if (this.isS3) {\n        this.awss3.signingURL = location;\n      }\n    }\n  }\n};\n</script>\n\n<style>\n.vue-dropzone {\n  border: 2px solid #e5e5e5;\n  font-family: \"Arial\", sans-serif;\n  letter-spacing: 0.2px;\n  color: #777;\n  transition: 0.2s linear;\n}\n\n.vue-dropzone:hover {\n  background-color: #f6f6f6;\n}\n\n.vue-dropzone > i {\n  color: #ccc;\n}\n\n.vue-dropzone > .dz-preview .dz-image {\n  border-radius: 0;\n  width: 100%;\n  height: 100%;\n}\n\n.vue-dropzone > .dz-preview .dz-image img:not([src]) {\n  width: 200px;\n  height: 200px;\n}\n\n.vue-dropzone > .dz-preview .dz-image:hover img {\n  transform: none;\n  -webkit-filter: none;\n}\n\n.vue-dropzone > .dz-preview .dz-details {\n  bottom: 0;\n  top: 0;\n  color: white;\n  background-color: rgba(33, 150, 243, 0.8);\n  transition: opacity 0.2s linear;\n  text-align: left;\n}\n\n.vue-dropzone > .dz-preview .dz-details .dz-filename {\n  overflow: hidden;\n}\n\n.vue-dropzone > .dz-preview .dz-details .dz-filename span,\n.vue-dropzone > .dz-preview .dz-details .dz-size span {\n  background-color: transparent;\n}\n\n.vue-dropzone > .dz-preview .dz-details .dz-filename:not(:hover) span {\n  border: none;\n}\n\n.vue-dropzone > .dz-preview .dz-details .dz-filename:hover span {\n  background-color: transparent;\n  border: none;\n}\n\n.vue-dropzone > .dz-preview .dz-progress .dz-upload {\n  background: #cccccc;\n}\n\n.vue-dropzone > .dz-preview .dz-remove {\n  position: absolute;\n  z-index: 30;\n  color: white;\n  margin-left: 15px;\n  padding: 10px;\n  top: inherit;\n  bottom: 15px;\n  border: 2px white solid;\n  text-decoration: none;\n  text-transform: uppercase;\n  font-size: 0.8rem;\n  font-weight: 800;\n  letter-spacing: 1.1px;\n  opacity: 0;\n}\n\n.vue-dropzone > .dz-preview:hover .dz-remove {\n  opacity: 1;\n}\n\n.vue-dropzone > .dz-preview .dz-success-mark,\n.vue-dropzone > .dz-preview .dz-error-mark {\n  margin-left: auto;\n  margin-top: auto;\n  width: 100%;\n  top: 35%;\n  left: 0;\n}\n\n.vue-dropzone > .dz-preview .dz-success-mark svg,\n.vue-dropzone > .dz-preview .dz-error-mark svg {\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.vue-dropzone > .dz-preview .dz-error-message {\n  margin-left: auto;\n  margin-right: auto;\n  left: 0;\n  width: 100%;\n  text-align: center;\n}\n\n.vue-dropzone > .dz-preview .dz-error-message:after {\n  display: none;\n}\n</style>\n","'use strict';\n\nfunction normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier\n/* server only */\n, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\n  if (typeof shadowMode !== 'boolean') {\n    createInjectorSSR = createInjector;\n    createInjector = shadowMode;\n    shadowMode = false;\n  } // Vue.extend constructor export interop.\n\n\n  var options = typeof script === 'function' ? script.options : script; // render functions\n\n  if (template && template.render) {\n    options.render = template.render;\n    options.staticRenderFns = template.staticRenderFns;\n    options._compiled = true; // functional template\n\n    if (isFunctionalTemplate) {\n      options.functional = true;\n    }\n  } // scopedId\n\n\n  if (scopeId) {\n    options._scopeId = scopeId;\n  }\n\n  var hook;\n\n  if (moduleIdentifier) {\n    // server build\n    hook = function hook(context) {\n      // 2.3 injection\n      context = context || // cached call\n      this.$vnode && this.$vnode.ssrContext || // stateful\n      this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext; // functional\n      // 2.2 with runInNewContext: true\n\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__;\n      } // inject component styles\n\n\n      if (style) {\n        style.call(this, createInjectorSSR(context));\n      } // register component module identifier for async chunk inference\n\n\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier);\n      }\n    }; // used by ssr in case component is cached and beforeCreate\n    // never gets called\n\n\n    options._ssrRegister = hook;\n  } else if (style) {\n    hook = shadowMode ? function () {\n      style.call(this, createInjectorShadow(this.$root.$options.shadowRoot));\n    } : function (context) {\n      style.call(this, createInjector(context));\n    };\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // register for functional component in vue file\n      var originalRender = options.render;\n\n      options.render = function renderWithStyleInjection(h, context) {\n        hook.call(context);\n        return originalRender(h, context);\n      };\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate;\n      options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\n    }\n  }\n\n  return script;\n}\n\nmodule.exports = normalizeComponent;\n//# sourceMappingURL=normalize-component.js.map\n"],"names":["[object Object]","file","config","payload","filePath","name","contentType","type","Promise","resolve","reject","fd","FormData","request","XMLHttpRequest","signingURL","open","onload","status","JSON","parse","response","onerror","err","console","error","withCredentials","Object","entries","headers","forEach","value","setRequestHeader","assign","params","append","send","is_sending_s3","handler","this","setResponseHandler","sendS3Handler","getSignedURL","then","catch","s3Signature","signature","s3Url","postEndpoint","keys","key","successMsg","window","DOMParser","parseFromString","firstChild","children","innerHTML","success","message","errMsg","Dropzone","template","style","script","scopeId","isFunctionalTemplate","moduleIdentifier","shadowMode","createInjector","createInjectorSSR","createInjectorShadow","hook","options","render","staticRenderFns","_compiled","functional","_scopeId","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","call","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","originalRender","h","existing","beforeCreate","concat"],"mappings":"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"}